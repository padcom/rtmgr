DROP VIEW KURSY;

CREATE VIEW 
  KURSY
AS
SELECT
  KURS.ID,
  KURS.ULICA,
  KURS.ULICAID,
  KURS.DOM,
  KURS.MIESZKANIE,
  KURS.TAKSOWKAID,
  TAKSOWKA.NRWYWOLAWCZY,
  KURS.PRZYJECIE,
  KURS.FLAGS
FROM
  KURS
  LEFT JOIN TAKSOWKA ON (TAKSOWKA.ID=KURS.TAKSOWKAID)
;

CREATE TABLE HASLO (HASLO VARCHAR(32));
COMMIT;

INSERT INTO HASLO (HASLO) VALUES ('qwe123');

ALTER TABLE KURS ADD OPIS VARCHAR(255);

DROP VIEW GRDKURSY;

CREATE VIEW GRDKURSY (
  ID, 
  FLAGS, 
  STATUS, 
  ULICAID, 
  ULICA, 
  DOM, 
  MIESZKANIE, 
  PRZYJECIE, 
  TAKSOWKAID, 
  TAKSOWKA,
  OPIS, 
  POSTOJ1, 
  POSTOJ2, 
  POSTOJ3, 
  POSTOJ4, 
  POSTOJ5, 
  POSTOJ6, 
  POSTOJ7, 
  POSTOJ8)
AS 
SELECT
  KURS.ID AS ID,
  KURS.FLAGS AS FLAGS,
  MIN(CASE KURS.FLAGS
    WHEN 0 THEN 'NORMALNY'
    WHEN 1 THEN '(jeden)'
    WHEN 2 THEN '(dwa)'
    WHEN 3 THEN '(trzy)'
    WHEN 4 THEN '(cztery)'
    WHEN 5 THEN '(piec)'
    WHEN 6 THEN '(szesc)'
    WHEN 7 THEN '(siedem)'
  END) AS STATUS,
  KURS.ULICAID AS ULICAID,  
  KURS.ULICA AS ULICA,
  KURS.DOM AS DOM,  
  KURS.MIESZKANIE AS MIESZKANIE,  
  KURS.PRZYJECIE AS PRZYJECIE,  
  TAKSOWKA.ID AS TAKSOWKAID,
  TAKSOWKA.NRWYWOLAWCZY AS TAKSOWKA,
  OPIS,
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 1 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ1,  
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 2 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ2,  
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 3 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ3,  
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 4 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ4,  
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 5 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ5,  
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 6 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ6,
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 7 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ7,  
  MIN(CASE POSTOJNAULICY.INDEKS WHEN 8 THEN POSTOJ.NAZWA ELSE NULL END) AS POSTOJ8
FROM 
  KURS
  LEFT OUTER JOIN TAKSOWKA ON (KURS.TAKSOWKAID = TAKSOWKA.ID)
  LEFT OUTER JOIN POSTOJNAULICY ON (KURS.ULICAID = POSTOJNAULICY.ULICAID)
  LEFT OUTER JOIN POSTOJ ON (POSTOJ.ID = POSTOJNAULICY.POSTOJID)
GROUP BY
  ID,
  FLAGS,
  ULICAID,  
  ULICA,
  DOM,  
  MIESZKANIE,  
  PRZYJECIE,  
  TAKSOWKAID,
  TAKSOWKA,
  OPIS
ORDER BY  
  PRZYJECIE
;

DROP VIEW TAKSOWKANAULICY;

CREATE VIEW TAKSOWKANAULICY(
  TAKSOWKA,
  NRWYWOLAWCZY,
  NAZWA,
  ID)
AS
SELECT 
  TAKSOWKA.ID AS TAKSOWKA,
  TAKSOWKA.NRWYWOLAWCZY, 
  POSTOJ.NAZWA, 
  ULICA.ID 
FROM
  POSTOJ
  INNER JOIN TAKSOWKANAPOSTOJU ON (POSTOJ.ID = TAKSOWKANAPOSTOJU.POSTOJID)
  INNER JOIN POSTOJNAULICY ON (POSTOJ.ID = POSTOJNAULICY.POSTOJID)
  INNER JOIN TAKSOWKA ON (TAKSOWKANAPOSTOJU.TAKSOWKAID = TAKSOWKA.ID)
  INNER JOIN ULICA ON (ULICA.ID = POSTOJNAULICY.ULICAID)
ORDER BY 
  POSTOJNAULICY.INDEKS,
  TAKSOWKANAPOSTOJU.INDEKS
;

SET TERM !! ;

CREATE OR ALTER PROCEDURE ADD_KURS (FLAGS INT, ULICAID INT, ULICA VARCHAR(80), DOM VARCHAR(10), MIESZKANIE VARCHAR(10), TAKSOWKAID INT, PRZYJECIE TIMESTAMP, OPIS VARCHAR(16384)) RETURNS (NEW_ID INT) AS
BEGIN
  NEW_ID = GEN_ID(KURS_ID, 1);
  INSERT INTO KURS (ID, FLAGS, ULICAID, ULICA, DOM, MIESZKANIE, TAKSOWKAID, PRZYJECIE, OPIS) VALUES (:NEW_ID, :FLAGS, :ULICAID, :ULICA, :DOM, :MIESZKANIE, :TAKSOWKAID, :PRZYJECIE, :OPIS);
END !!

CREATE OR ALTER PROCEDURE UPDATE_KURS (ID INT, FLAGS INT, ULICAID INT, ULICA VARCHAR(80), DOM VARCHAR(10), MIESZKANIE VARCHAR(10), TAKSOWKAID INT, PRZYJECIE TIMESTAMP, OPIS VARCHAR(16384)) AS
  DECLARE VARIABLE NEW_ID INT;
BEGIN
  IF (ID = 0) THEN
    EXECUTE PROCEDURE ADD_KURS :FLAGS, :ULICAID, :ULICA, :DOM, :MIESZKANIE, :TAKSOWKAID, :PRZYJECIE, :OPIS RETURNING_VALUES :NEW_ID;
  ELSE
    UPDATE KURS SET FLAGS=:FLAGS, ULICAID=:ULICAID, ULICA=:ULICA, DOM=:DOM, MIESZKANIE=:MIESZKANIE, TAKSOWKAID=:TAKSOWKAID, PRZYJECIE=:PRZYJECIE, OPIS=:OPIS WHERE ID=:ID;
END !!

CREATE OR ALTER PROCEDURE ZESTAWIENIE (START1 TIMESTAMP, STOP1 TIMESTAMP)
RETURNS (
    NAZWA VARCHAR(80),
    NRWYWOLAWCZY VARCHAR(10),
    NRBOCZNY VARCHAR(10),
    ILOSCKURSOW INTEGER)
AS
    DECLARE VARIABLE A_ID VARCHAR(10);
BEGIN
  FOR SELECT 
    ID, NRWYWOLAWCZY, NRBOCZNY, NAZWA 
  FROM 
    TAKSOWKA 
  ORDER BY
    NRWYWOLAWCZY
  INTO
    :A_ID, :NRWYWOLAWCZY, :NRBOCZNY, :NAZWA
  DO
  BEGIN
    FOR SELECT 
      COUNT(KURS.ID) 
    FROM 
      KURS 
    WHERE 
      KURS.TAKSOWKAID=:A_ID AND KURS.PRZYJECIE BETWEEN :START1 AND :STOP1
    INTO 
      :ILOSCKURSOW
    DO SUSPEND;
  END
END !!

SET TERM ; !!

ALTER TABLE KURS DROP PRZESUNIECIE;
DROP INDEX IDX_KURS_BY_REALIZACJA;
ALTER TABLE KURS DROP REALIZACJA;
COMMIT;
CREATE INDEX IDX_KURS_BY_PRZYJECIE ON KURS(PRZYJECIE);
COMMIT;

select * from grdkursy where przyjecie between '2009-02-15' and '2009-02-16'
